# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- script: echo Compilar y correr las pruebas unitarias
  displayName: 'Commit Check'

- script: |
    echo Correr las pruebas de integraci√≥n
    echo Inicio update MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt-get update
    echo Inicio java  MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt-get install openjdk-8-jdk
    java -version
    echo Instalacion y Descarga de scala  MENSAJEEEEEEEEEEEEEEEEEEEE 
    wget www.scala-lang.org/files/archive/scala-2.12.10.deb
    sudo dpkg -i scala*.deb
    scala -version
    echo Instalacion y Descarga SBT MENSAJEEEEEEEEEEEEEEEEEEEE
    echo "deb https://dl.bintray.com/sbt/debian/" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823
    sudo apt-get update
    sudo apt-get install sbt -y
    echo Instalar GIT MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt install git
    git -version
    echo Instalar Which MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt install which
    echo Instalar YUM-UTILS MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt-get install -y yum-utils
    echo Instalar Docker MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo apt-get install docker-ce docker-ce-cli containerd.io
    sudo docker run hello-world
    echo Instalar ALIEN MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo add-apt-repository universe
    sudo apt install alien
    echo Listar repositorio MENSAJEEEEEEEEEEEEEEEEEEEE
    ls
    echo Crear el build MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo sbt rpm:packageBin
    echo Copiar a Azure MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo scp -v -o StrictHostKeyChecking=no -i webserver-01_key.pem /home/vsts/work/1/s/gcs-app/target/rpm/RPMS/noarch/gcs-app-2.8.x-1.noarch.rpm azureuser@40.121.239.199:/home/azureuser
    echo Conectarse a Azure MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo ssh -tt -i webserver-01_key.pem azureuser@40.121.239.199 <<'EOT'
    echo Detener el APP y Nginx MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo systemctl stop nginx
    sudo systemctl stop gcs-app.service
    echo Desintalar la APP MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo rpm -e gcs-app
    echo Eliminar directorio MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo rm -rf /usr/share/gcs-app/
    echo Instalar la APP MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo rpm -i gcs-app-2.8.x-1.noarch.rpm
    echo Cambiar de usuario MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo chown -R gcs-app /usr/share/gcs-app/
    sudo chgrp -R gcs-app /usr/share/gcs-app/
    logout
    EOT
    sudo scp -v -o StrictHostKeyChecking=no -i webserver-01_key.pem nginx.conf azureuser@40.121.239.199:/etc/nginx
    echo Volver a conectarse a Azure MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo ssh -tt -i webserver-01_key.pem azureuser@40.121.239.199 <<'EOT'
    echo Reiniciar el APP y nginx MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo systemctl restart nginx
    sudo systemctl restart gcs-app.service
    echo Habilitar el demonio MENSAJEEEEEEEEEEEEEEEEEEEE
    sudo setsebool -P httpd_can_network_connect on
    logout
    EOT
    echo FIN MENSAJEEEEEEEEEEEEEEEEEEEE222334433
  displayName: 'Integration Tests'